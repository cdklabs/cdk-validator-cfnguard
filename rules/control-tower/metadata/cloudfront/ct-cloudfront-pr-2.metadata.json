{
    "Artifacts": [
        {
            "Location": "/controls/AmazonCloudFront/cfn-guard-rules/CT.CLOUDFRONT.PR.2/artifacts/deployment/CT.CLOUDFRONT.PR.2.guard",
            "Purpose": "DEPLOYMENT",
            "Type": "CLOUDFORMATION_GUARD_RULE"
        },
        {
            "Description": "This template provides an example AWS CloudFormation resource that fails the check by the proactive control.",
            "Location": "/controls/AmazonCloudFront/cfn-guard-rules/CT.CLOUDFRONT.PR.2/artifacts/tests/bug-bash/templates/scenario-4c-FAIL.yaml",
            "Name": "Non-compliant AWS CloudFormation template example 1",
            "Purpose": "TESTING_NON_COMPLIANCE",
            "Type": "CLOUDFORMATION_TEMPLATE"
        },
        {
            "Description": "This template provides an example AWS CloudFormation resource that passes the check by the proactive control.",
            "Location": "/controls/AmazonCloudFront/cfn-guard-rules/CT.CLOUDFRONT.PR.2/artifacts/tests/bug-bash/templates/scenario-5c-PASS.yaml",
            "Name": "Compliant AWS CloudFormation template example 1",
            "Purpose": "TESTING_COMPLIANCE",
            "Type": "CLOUDFORMATION_TEMPLATE"
        },
        {
            "Location": "/controls/AmazonCloudFront/cfn-guard-rules/CT.CLOUDFRONT.PR.2/artifacts/tests/CT.CLOUDFRONT.PR.2_common_tests.yaml",
            "Purpose": "TESTING",
            "Type": "CLOUDFORMATION_TEMPLATE"
        },
        {
            "Location": "/controls/AmazonCloudFront/cfn-guard-rules/CT.CLOUDFRONT.PR.2/artifacts/tests/CT.CLOUDFRONT.PR.2_hook_tests.yaml",
            "Purpose": "TESTING",
            "Type": "CLOUDFORMATION_TEMPLATE"
        },
        {
            "Location": "/controls/AmazonCloudFront/cfn-guard-rules/CT.CLOUDFRONT.PR.2/artifacts/tests/CT.CLOUDFRONT.PR.2_cfn_tests.yaml",
            "Purpose": "TESTING",
            "Type": "CLOUDFORMATION_TEMPLATE"
        }
    ],
    "Behavior": "PROACTIVE",
    "ComplianceFrameworkMappings": [
        {
            "ComplianceFramework": "NIST 800-53 Rev 5",
            "Ids": [
                "SC-7(11)"
            ]
        },
        {
            "ComplianceFramework": "PCI DSS version 3.2.1",
            "Ids": [
                "1.2.1",
                "1.3",
                "1.3.1",
                "1.3.2",
                "1.3.4"
            ]
        }
    ],
    "ConfigRuleIdentifier": "CLOUDFRONT_ORIGIN_ACCESS_IDENTITY_ENABLED",
    "ControlOwner": "AWS Control Tower",
    "DeploymentMechanism": "AWS CloudFormation Hook",
    "DeploymentOwner": "AWS Control Tower",
    "Description": "This control checks whether Amazon CloudFront distributions backed by Amazon S3 are configured with an origin access identity.",
    "DisplayName": "Require any Amazon CloudFront distributions with Amazon S3 backed origins to have an origin access identity configured",
    "DocumentationReferences": [
        {
            "DisplayName": "Restricting access to an Amazon S3 origin.",
            "Type": "AWS Documentation",
            "Url": "https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html#private-content-creating-oai"
        }
    ],
    "EvaluatedResourceTypes": [
        "AWS::CloudFront::Distribution"
    ],
    "EvaluatedServices": [
        "Amazon CloudFront"
    ],
    "Guidance": "Elective",
    "Id": "CT.CLOUDFRONT.PR.2",
    "ImplementationType": "CloudFormation guard rule",
    "MinimumSupportedRuntimeVersion": "2.1",
    "Objectives": [
        {
            "Id": "CO.10",
            "Name": "Protect configurations"
        }
    ],
    "RegionalPreference": "REGIONAL",
    "Relationships": [
        {
            "ControlId": "CT.CLOUDFRONT.PR.10",
            "ControlOwner": "AWS Control Tower",
            "RelationshipType": "Cannot be used with (Mutually Exclusive)"
        }
    ],
    "ReleaseDate": "2022-11-28",
    "RemediationMessage": "Configure Amazon S3 backed origins by means of the 'Origins' property. For each origin backed by Amazon S3, configure an origin access identity by means of the 'OriginAccessIdentity' property within an 'S3OriginConfig' configuration.",
    "Severity": "MEDIUM",
    "SupportedRegions": [
        "af-south-1",
        "ap-east-1",
        "ap-northeast-1",
        "ap-northeast-2",
        "ap-northeast-3",
        "ap-south-1",
        "ap-southeast-1",
        "ap-southeast-2",
        "ap-southeast-3",
        "ca-central-1",
        "eu-central-1",
        "eu-north-1",
        "eu-south-1",
        "eu-west-1",
        "eu-west-2",
        "eu-west-3",
        "me-south-1",
        "sa-east-1",
        "us-east-1",
        "us-east-2",
        "us-west-1",
        "us-west-2"
    ],
    "TargetOuType": "CUSTOM",
    "Version": "1",
    "Visibility": "PUBLIC"
}